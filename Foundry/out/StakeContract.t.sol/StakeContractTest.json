{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "AMOUNT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeContract",
      "outputs": [
        {
          "internalType": "contract StakeContract",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testStakingTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract MockERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff1916600117905534801561001d57600080fd5b506113c48061002d6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063ba414fa61161005b578063ba414fa6146100ca578063d1789176146100e2578063fa7626d4146100ff578063fc0c546a1461010c57600080fd5b80630a9254e4146100825780631a1862271461008c578063a1dad5a9146100c2575b600080fd5b61008a61011f565b005b6000546100a5906201000090046001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61008a6101b9565b6100d26102d5565b60405190151581526020016100b9565b6100f1670de0b6b3a764000081565b6040519081526020016100b9565b6000546100d29060ff1681565b6001546100a5906001600160a01b031681565b60405161012b9061057b565b604051809103906000f080158015610147573d6000803e3d6000fd5b50600060026101000a8154816001600160a01b0302191690836001600160a01b0316021790555060405161017a90610588565b604051809103906000f080158015610196573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b0392909216919091179055565b60015460005460405163095ea7b360e01b81526001600160a01b036201000090920482166004820152670de0b6b3a7640000602482015291169063095ea7b3906044016020604051808303816000875af115801561021b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023f9190610595565b5060008054600154604051637acb775760e01b8152670de0b6b3a764000060048201526001600160a01b039182166024820152620100009092041690637acb7757906044016020604051808303816000875af11580156102a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c79190610595565b90506102d281610400565b50565b60008054610100900460ff16156102f55750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156103fb5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610383917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016105f9565b60408051601f198184030181529082905261039d9161061d565b6000604051808303816000865af19150503d80600081146103da576040519150601f19603f3d011682016040523d82523d6000602084013e6103df565b606091505b50915050808060200190518101906103f79190610595565b9150505b919050565b806102d2577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516104649060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a16102d2737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561056a5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905261050992916020016105f9565b60408051601f19818403018152908290526105239161061d565b6000604051808303816000865af19150503d8060008114610560576040519150601f19603f3d011682016040523d82523d6000602084013e610565565b606091505b505050505b6000805461ff001916610100179055565b6102608061062a83390190565b610b058061088a83390190565b6000602082840312156105a757600080fd5b815180151581146105b757600080fd5b9392505050565b6000815160005b818110156105df57602081850181015186830152016105c5565b818111156105ee576000828601525b509290920192915050565b6001600160e01b031983168152600061061560048301846105be565b949350505050565b60006105b782846105be56fe608060405234801561001057600080fd5b50610240806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637acb77571461003b578063ab32eb6914610063575b600080fd5b61004e61004936600461017b565b610091565b60405190151581526020015b60405180910390f35b6100836100713660046101a7565b60006020819052908152604090205481565b60405190815260200161005a565b336000908152602081905260408120546100ac9084906101c2565b336000818152602081905260408082209390935591516323b872dd60e01b81526004810191909152306024820152604481018590526001600160a01b038416906323b872dd906064016020604051808303816000875af1158015610114573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013891906101e8565b9050806101585760405163558ea54160e11b815260040160405180910390fd5b9392505050565b80356001600160a01b038116811461017657600080fd5b919050565b6000806040838503121561018e57600080fd5b8235915061019e6020840161015f565b90509250929050565b6000602082840312156101b957600080fd5b6101588261015f565b600082198211156101e357634e487b7160e01b600052601160045260246000fd5b500190565b6000602082840312156101fa57600080fd5b8151801515811461015857600080fdfea26469706673582212209689e8d70cdc624ca9ce379e0978354a1663dc9726c213ba3bdc78021726da8e64736f6c634300080d0033608060405234801561001057600080fd5b50604080518082018252600a81526904d6f636b2045524332360b41b6020808301918252835180850190945260048452634d45524360e01b90840152815191929161005d91600391610176565b508051610071906004906020840190610176565b50505061008e3369d3c21bcecceda100000061009360201b60201c565b61026f565b6001600160a01b0382166100ed5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546100ff919061020f565b90915550506001600160a01b0382166000908152602081905260408120805483929061012c90849061020f565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b82805461018290610235565b90600052602060002090601f0160209004810192826101a457600085556101ea565b82601f106101bd57805160ff19168380011785556101ea565b828001600101855582156101ea579182015b828111156101ea5782518255916020019190600101906101cf565b506101f69291506101fa565b5090565b5b808211156101f657600081556001016101fb565b6000821982111561023057634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061024957607f821691505b60208210810361026957634e487b7160e01b600052602260045260246000fd5b50919050565b610886806200027f6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082a565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b60208210810361082457634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084b57634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122004f4ab8985ce6461d0a41e70249c3c696d89774810cfc3e02a21e60cc7cb019f64736f6c634300080d0033a2646970667358221220918413a427f0cddc91232f072cab48a025f0250d78e1452fe40661c1dd224ba664736f6c634300080d0033",
    "sourceMap": "165:465:7:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;165:465:7;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "165:465:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;320:109;;;:::i;:::-;;208:34;;;;;;;;-1:-1:-1;;;;;208:34:7;;;;;;-1:-1:-1;;;;;200:32:8;;;182:51;;170:2;155:18;208:34:7;;;;;;;;435:193;;;:::i;1819:584:0:-;;;:::i;:::-;;;409:14:8;;402:22;384:41;;372:2;357:18;1819:584:0;244:187:8;276:37:7;;309:4;276:37;;;;;582:25:8;;;570:2;555:18;276:37:7;436:177:8;1572:26:0;;;;;;;;;248:22:7;;;;;-1:-1:-1;;;;;248:22:7;;;320:109;370:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;354:13;;:35;;;;;-1:-1:-1;;;;;354:35:7;;;;;-1:-1:-1;;;;;354:35:7;;;;;;407:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;399:5:7;:23;;-1:-1:-1;;;;;;399:23:7;-1:-1:-1;;;;;399:23:7;;;;;;;;;;320:109::o;435:193::-;481:5;;;503:13;481:44;;-1:-1:-1;;;481:44:7;;-1:-1:-1;;;;;503:13:7;;;;;;481:44;;;1018:51:8;309:4:7;1085:18:8;;;1078:34;481:5:7;;;:13;;991:18:8;;481:44:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;535:12:7;550:13;;585:5;;550:42;;-1:-1:-1;;;550:42:7;;309:4;550:42;;;1579:25:8;-1:-1:-1;;;;;585:5:7;;;1620:18:8;;;1613:60;550:13:7;;;;;;:19;;1552:18:8;;550:42:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;535:57;;602:19;613:7;602:10;:19::i;:::-;471:157;435:193::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;1018:51:8;;;-1:-1:-1;;;1085:18:8;;;1078:34;2196:43:0;;;;;;;;;991:18:8;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;3255:157::-;3315:9;3310:96;;3345:30;;;;;2983:2:8;2965:21;;;3022:2;3002:18;;;2995:30;3061:25;3056:2;3041:18;;3034:53;3119:2;3104:18;;2781:347;3345:30:0;;;;;;;;3389:6;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;3335:51:8;;;-1:-1:-1;;;3402:18:8;;;3395:34;;;;2705:4:0;3445:18:8;;;3438:34;2482:11:0;;1671:64;2579:43;;3308:18:8;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;1123:277:8:-;1190:6;1243:2;1231:9;1222:7;1218:23;1214:32;1211:52;;;1259:1;1256;1249:12;1211:52;1291:9;1285:16;1344:5;1337:13;1330:21;1323:5;1320:32;1310:60;;1366:1;1363;1356:12;1310:60;1389:5;1123:277;-1:-1:-1;;;1123:277:8:o;1963:336::-;2004:3;2042:5;2036:12;2066:1;2076:128;2090:6;2087:1;2084:13;2076:128;;;2187:4;2172:13;;;2168:24;;2162:31;2149:11;;;2142:52;2105:12;2076:128;;;2222:6;2219:1;2216:13;2213:48;;;2257:1;2248:6;2243:3;2239:16;2232:27;2213:48;-1:-1:-1;2277:16:8;;;;;1963:336;-1:-1:-1;;1963:336:8:o;2304:278::-;-1:-1:-1;;;;;;2489:33:8;;2477:46;;2459:3;2539:37;2573:1;2564:11;;2556:6;2539:37;:::i;:::-;2532:44;2304:278;-1:-1:-1;;;;2304:278:8:o;2587:189::-;2716:3;2741:29;2766:3;2758:6;2741:29;:::i",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/mnt/c/Users/rey_g/Downloads/Blockchain/Hackathon-Chainlink-Spring-2022/Foundry/test/StakeContract.t.sol",
    "id": 2637,
    "exportedSymbols": {
      "Context": [
        2497
      ],
      "DSTest": [
        1786
      ],
      "ERC20": [
        2372
      ],
      "IERC20": [
        2450
      ],
      "IERC20Metadata": [
        2475
      ],
      "MockERC20": [
        2572
      ],
      "StakeContract": [
        2552
      ],
      "StakeContractTest": [
        2636
      ],
      "StakeContract__TransferFailed": [
        2502
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:592:7",
    "nodes": [
      {
        "id": 2574,
        "nodeType": "PragmaDirective",
        "src": "39:24:7",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 2575,
        "nodeType": "ImportDirective",
        "src": "65:26:7",
        "absolutePath": "/mnt/c/Users/rey_g/Downloads/Blockchain/Hackathon-Chainlink-Spring-2022/Foundry/lib/forge-std/lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2637,
        "sourceUnit": 1787,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2576,
        "nodeType": "ImportDirective",
        "src": "92:34:7",
        "absolutePath": "/mnt/c/Users/rey_g/Downloads/Blockchain/Hackathon-Chainlink-Spring-2022/Foundry/src/StakeContract.sol",
        "file": "../src/StakeContract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2637,
        "sourceUnit": 2553,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2577,
        "nodeType": "ImportDirective",
        "src": "127:36:7",
        "absolutePath": "/mnt/c/Users/rey_g/Downloads/Blockchain/Hackathon-Chainlink-Spring-2022/Foundry/src/mocks/MockERC20.sol",
        "file": "../src/mocks/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2637,
        "sourceUnit": 2573,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2636,
        "nodeType": "ContractDefinition",
        "src": "165:465:7",
        "nodes": [
          {
            "id": 2582,
            "nodeType": "VariableDeclaration",
            "src": "208:34:7",
            "constant": false,
            "functionSelector": "1a186227",
            "mutability": "mutable",
            "name": "stakeContract",
            "nameLocation": "229:13:7",
            "scope": 2636,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakeContract_$2552",
              "typeString": "contract StakeContract"
            },
            "typeName": {
              "id": 2581,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2580,
                "name": "StakeContract",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2552,
                "src": "208:13:7"
              },
              "referencedDeclaration": 2552,
              "src": "208:13:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakeContract_$2552",
                "typeString": "contract StakeContract"
              }
            },
            "visibility": "public"
          },
          {
            "id": 2585,
            "nodeType": "VariableDeclaration",
            "src": "248:22:7",
            "constant": false,
            "functionSelector": "fc0c546a",
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "265:5:7",
            "scope": 2636,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$2572",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 2584,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2583,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2572,
                "src": "248:9:7"
              },
              "referencedDeclaration": 2572,
              "src": "248:9:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$2572",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 2588,
            "nodeType": "VariableDeclaration",
            "src": "276:37:7",
            "constant": true,
            "functionSelector": "d1789176",
            "mutability": "constant",
            "name": "AMOUNT",
            "nameLocation": "300:6:7",
            "scope": 2636,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2586,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "276:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653138",
              "id": 2587,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "309:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1e18"
            },
            "visibility": "public"
          },
          {
            "id": 2606,
            "nodeType": "FunctionDefinition",
            "src": "320:109:7",
            "body": {
              "id": 2605,
              "nodeType": "Block",
              "src": "344:85:7",
              "statements": [
                {
                  "expression": {
                    "id": 2596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2591,
                      "name": "stakeContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2582,
                      "src": "354:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakeContract_$2552",
                        "typeString": "contract StakeContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "370:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_StakeContract_$2552_$",
                          "typeString": "function () returns (contract StakeContract)"
                        },
                        "typeName": {
                          "id": 2593,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2592,
                            "name": "StakeContract",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2552,
                            "src": "374:13:7"
                          },
                          "referencedDeclaration": 2552,
                          "src": "374:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakeContract_$2552",
                            "typeString": "contract StakeContract"
                          }
                        }
                      },
                      "id": 2595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "370:19:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakeContract_$2552",
                        "typeString": "contract StakeContract"
                      }
                    },
                    "src": "354:35:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakeContract_$2552",
                      "typeString": "contract StakeContract"
                    }
                  },
                  "id": 2597,
                  "nodeType": "ExpressionStatement",
                  "src": "354:35:7"
                },
                {
                  "expression": {
                    "id": 2603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2598,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2585,
                      "src": "399:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$2572",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "407:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockERC20_$2572_$",
                          "typeString": "function () returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 2600,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2599,
                            "name": "MockERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2572,
                            "src": "411:9:7"
                          },
                          "referencedDeclaration": 2572,
                          "src": "411:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$2572",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 2602,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "407:15:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$2572",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "399:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$2572",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 2604,
                  "nodeType": "ExpressionStatement",
                  "src": "399:23:7"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "329:5:7",
            "parameters": {
              "id": 2589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "334:2:7"
            },
            "returnParameters": {
              "id": 2590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "344:0:7"
            },
            "scope": 2636,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2635,
            "nodeType": "FunctionDefinition",
            "src": "435:193:7",
            "body": {
              "id": 2634,
              "nodeType": "Block",
              "src": "471:157:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2614,
                            "name": "stakeContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2582,
                            "src": "503:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakeContract_$2552",
                              "typeString": "contract StakeContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakeContract_$2552",
                              "typeString": "contract StakeContract"
                            }
                          ],
                          "id": 2613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "495:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2612,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "495:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "495:22:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2616,
                        "name": "AMOUNT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2588,
                        "src": "518:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2609,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2585,
                        "src": "481:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$2572",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 2611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1953,
                      "src": "481:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "481:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2618,
                  "nodeType": "ExpressionStatement",
                  "src": "481:44:7"
                },
                {
                  "assignments": [
                    2620
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2620,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "540:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2634,
                      "src": "535:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2619,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "535:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2629,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2623,
                        "name": "AMOUNT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2588,
                        "src": "570:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2626,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2585,
                            "src": "585:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$2572",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$2572",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 2625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "577:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2624,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "577:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "577:14:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2621,
                        "name": "stakeContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2582,
                        "src": "550:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakeContract_$2552",
                          "typeString": "contract StakeContract"
                        }
                      },
                      "id": 2622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2551,
                      "src": "550:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) external returns (bool)"
                      }
                    },
                    "id": 2628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "550:42:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "535:57:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2631,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2620,
                        "src": "613:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2630,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "602:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 2632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "602:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2633,
                  "nodeType": "ExpressionStatement",
                  "src": "602:19:7"
                }
              ]
            },
            "functionSelector": "a1dad5a9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testStakingTokens",
            "nameLocation": "444:17:7",
            "parameters": {
              "id": 2607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "461:2:7"
            },
            "returnParameters": {
              "id": 2608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "471:0:7"
            },
            "scope": 2636,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2578,
              "name": "DSTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1786,
              "src": "195:6:7"
            },
            "id": 2579,
            "nodeType": "InheritanceSpecifier",
            "src": "195:6:7"
          }
        ],
        "canonicalName": "StakeContractTest",
        "contractDependencies": [
          2552,
          2572
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          2636,
          1786
        ],
        "name": "StakeContractTest",
        "nameLocation": "174:17:7",
        "scope": 2637,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  }
}